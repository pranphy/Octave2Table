function Octave2Table(varargin)
	TotalArgs = length(varargin);
	i = 1;
	#printf(' there are toatal of %d arguments \n',TotalArgs)
	#String = "TestStrings";
	j = 1;
	while( i < TotalArgs)
		#disp(i)
		Type = typeinfo(varargin{i});
		if(strcmp(typeinfo(varargin{i}),typeinfo('string')))
			#printf(' found string %s ',varargin{i})
			if(strcmp(toupper(varargin{i}),toupper('filename')))
				#printf(' and it is filename \n')
				#disp(varargin{i});
				FileName = varargin{i+1};
				i = i+2;
			else
				#printf(' but it is not filename \n');
				Title{j} = varargin{i};
				#printf('the string is %s ',Title{j});
				Array{j} = varargin{i+1};
				
				#disp(Array{j});
				j++;
				%printf(' the above array was just used  ');
				i = i+2;
			end
		end
	end
	#printf('\n ======================================= \n');
	#printf('it seems there are %d fields \n',j)
	ColumnCount = j-1;
	#printf(' it seems the name of file is %s \n',FileName)
	File = fopen(FileName,'w');
	#printf(' I opened the a file \n')
	FirstArray = Array{1};
	#printf(' the first of the arrays seems to be \n')
	#disp(FirstArray);
	RowCount = length(FirstArray);
	#printf(' I counted the no of elements in first array ');
	#printf(' it seems there are %d rows ',RowCount)
	for Col = 2:ColumnCount
		if(length(Array{Col}) != RowCount)
			printf(' The array size do not agree check array size ');
			return ;
		end
	end
	fprintf(File, '%c Generated by MatlabOctave2Table version 0.1 \n','%')
	fprintf(File, '%c MatlabOctave2Table is developed by Prakash Gautam and is currently under development\n','%')
	fprintf(File,'\\begin{tabular}{|')
	for Col = 1:ColumnCount
		fprintf(File,'c|');
	end
	fprintf(File,'} \n \\hline \n')
	
	for Col = 1:ColumnCount
		fprintf(File,"\\textbf{%s}",Title{Col});
		if(Col != ColumnCount)
			fprintf(File," & ");
		else
			fprintf(File,"\\\\ \n");
		end
	end
	fprintf(File,' \\hline \n')
	
	for Row = 1:RowCount
		fprintf(File,' \t ')
		for Col = 1:ColumnCount
			CurArray = Array{Col};
			fprintf(File,"%.3f",CurArray(Row));
			if(Col != ColumnCount)
				fprintf(File," & ");
			else
				fprintf(File,"\\\\ \n");
			end
		end
	end
	fprintf(File,'\\hline \n \\end{tabular}');
	fclose(File);	
end
